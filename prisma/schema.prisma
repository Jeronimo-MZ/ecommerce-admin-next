// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id     String @id @default(uuid())
  name   String
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  billboards Billboard[]
  categories Category[]
  sizes      Size[]
  colors     Color[]

  @@unique([name, userId])
}

model Billboard {
  id       String @id @default(uuid())
  label    String
  imageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store      Store      @relation(fields: [storeId], references: [id])
  storeId    String
  categories Category[]

  @@index([storeId])
}

model Category {
  id   String @id @default(uuid())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  billboard   Billboard @relation(fields: [billboardId], references: [id])
  billboardId String

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id    String @id @default(uuid())
  name  String
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  @@unique([storeId, name])
  @@index([storeId])
}

model Color {
  id    String @id @default(uuid())
  name  String
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  @@unique([storeId, name])
  @@index([storeId])
}
