DROP DATABASE IF EXISTS ecommerce;
CREATE DATABASE ecommerce;

USE ecommerce;

CREATE TABLE UTILIZADOR (
    utilizador_cod INTEGER PRIMARY KEY AUTO_INCREMENT,
    utilizador_nome VARCHAR(255) NOT NULL,
    utilizador_email VARCHAR(255) NOT NULL,
    utilizador_senha VARCHAR(255) NOT NULL,
    utilizador_endereco VARCHAR(255) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE LOJA (
    loja_cod INTEGER PRIMARY KEY AUTO_INCREMENT,
    loja_nome VARCHAR(255) NOT NULL,
    loja_url VARCHAR(255) NOT NULL,
    loja_moeda_usada VARCHAR(255) NOT NULL,
    cod_utilizador INTEGER NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    FOREIGN KEY (cod_utilizador) REFERENCES UTILIZADOR(utilizador_cod)
);

CREATE TABLE CAPA (
    capa_cod INTEGER PRIMARY KEY AUTO_INCREMENT,
    capa_texto TEXT NOT NULL,
    capa_url_imagem VARCHAR(255) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    cod_loja INTEGER NOT NULL,
    FOREIGN KEY (cod_loja) REFERENCES LOJA(loja_cod)
);

CREATE TABLE TAMANHO (
    tam_cod INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
    tam_nome VARCHAR(255) NOT NULL,
    tam_abreviatura VARCHAR(10) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    cod_loja INTEGER NOT NULL,
    FOREIGN KEY (cod_loja) REFERENCES LOJA(loja_cod)
);

CREATE TABLE COR (
    cor_cod INTEGER PRIMARY KEY AUTO_INCREMENT,
    cor_nome VARCHAR(255) NOT NULL,
    cor_codigo_hexadecimal VARCHAR(10) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    cod_loja INTEGER NOT NULL,
    FOREIGN KEY (cod_loja) REFERENCES LOJA(loja_cod)
);

CREATE TABLE CATEGORIA (
    cat_cod INTEGER PRIMARY KEY AUTO_INCREMENT,
    cat_nome VARCHAR(255) NOT NULL,
    cod_capa INTEGER NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    cod_loja INTEGER NOT NULL,
    FOREIGN KEY (cod_loja) REFERENCES LOJA(loja_cod),
    FOREIGN KEY (cod_capa) REFERENCES CAPA(capa_cod)
);


CREATE TABLE PRODUTO (
    produto_cod INTEGER PRIMARY KEY AUTO_INCREMENT,
    produto_nome VARCHAR(255) NOT NULL,
    produto_preco INTEGER NOT NULL, -- EM CENTAVOS
    produto_quantidade_stock INTEGER NOT NULL,
    cod_loja INTEGER NOT NULL,
    cod_tamanho INTEGER NOT NULL,
    cod_cor INTEGER NOT NULL,
    cod_categoria INTEGER NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    FOREIGN KEY (cod_loja) REFERENCES LOJA(loja_cod),
    FOREIGN KEY (cod_tamanho) REFERENCES TAMANHO(tam_cod),
    FOREIGN KEY (cod_cor) REFERENCES COR(cor_cod),
    FOREIGN KEY (cod_categoria) REFERENCES CATEGORIA(cat_cod)
);

CREATE TABLE FOTO_PRODUTO (
    fp_cod INTEGER PRIMARY KEY AUTO_INCREMENT ,
    cod_produto INTEGER NOT NULL,
    ft_url_foto VARCHAR(255) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    FOREIGN KEY (cod_produto) REFERENCES PRODUTO(produto_cod) ON DELETE CASCADE
);


CREATE TABLE CLIENTE (
    cli_email VARCHAR(255) PRIMARY KEY,
    cli_nome VARCHAR(255) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    cod_loja INTEGER NOT NULL,
    FOREIGN KEY (cod_loja) REFERENCES LOJA(loja_cod)
);

CREATE TABLE PEDIDO (
    ped_cod INTEGER PRIMARY KEY AUTO_INCREMENT,
    ped_status VARCHAR(255) NOT NULL,
    ped_endereco_entrega VARCHAR(255) NOT NULL,
    ped_cod_transac VARCHAR(255),
    ped_data_pagamento TIMESTAMP,
    -- ped_data_pedido DATE NOT NULL, Ã© a data de criacao
    email_cliente VARCHAR(255) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    cod_loja INTEGER NOT NULL,
    FOREIGN KEY (cod_loja) REFERENCES LOJA(loja_cod),
    FOREIGN KEY (email_cliente) REFERENCES CLIENTE(cli_email)
    
);

CREATE TABLE ITEM_PEDIDO (
    cod_pedido INTEGER NOT NULL,
    cod_produto INTEGER NOT NULL,
    item_preco_venda INTEGER NOT NULL, -- EM CENTAVOS
    item_quantidade INTEGER NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    FOREIGN KEY (cod_pedido) REFERENCES PEDIDO(ped_cod),
    FOREIGN KEY (cod_produto) REFERENCES PRODUTO(produto_cod),
    PRIMARY KEY (cod_pedido, cod_produto)
);
